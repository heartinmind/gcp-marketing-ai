[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "marketing-ai-ml"
version = "0.1.0"
description = "MarketingAI ML 파이프라인"
dependencies = [
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "google-cloud-bigquery>=3.11.0",
    "google-cloud-storage>=2.10.0",
    "google-cloud-aiplatform>=1.35.0",
    "kfp>=2.3.0",
    "joblib>=1.3.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.0.0"
]

# Ruff 설정 (린터 + 포맷터)
[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
    "RET",  # flake8-return
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
]

ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # function call in defaults
    "PIE790", # unnecessary pass
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/**/*.py" = ["B011", "B018"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

# MyPy 설정 (타입 체커)
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# 외부 라이브러리 무시
[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "joblib.*",
    "kfp.*",
    "google.cloud.*"
]
ignore_missing_imports = true

# Pytest 설정
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=ml",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]

# Coverage 설정
[tool.coverage.run]
source = ["ml"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError"
] 